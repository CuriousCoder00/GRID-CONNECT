generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  directUrl    = env("DIRECT_URL")
  relationMode = "prisma"
}

model User {
  id String @id @default(uuid())

  name String

  email    String @unique
  username String @unique
  password String

  imageUrl String @db.Text

  communities Community[]
  members     Member[]

  isVerified Boolean @default(false)

  forgotPasswordToken String @default("")

  verifyToken String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Community {
  id          String @id @default(uuid())
  name        String
  description String
  imageUrl    String @db.Text
  inviteCode  String @unique

  communityType String

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  members Member[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id   String     @id @default(uuid())
  role MemberRole @default(GUEST)

  userId String
  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  communityId String
  communities Community @relation(fields: [communityId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([communityId])
}
